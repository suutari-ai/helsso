* SSO-tehtäviä

** DONE Facebook-kirjautumiset ilman sähköpostia
   CLOSED: [2017-01-06 Fri 12:22]
   - reauth kuten ticketissä https://github.com/City-of-Helsinki/helsso/issues/12
   - tai ACCOUNT_EMAIL_VERIFICATION = mandatory 
** STARTED API-authentikaatio OIDC:llä
   - OIDC:n id_tokenin käyttäminen API-authentikaatioon?
   - passport-kirjasto tälle
   - backend-muutokset ID-tokenin verifikaatioon API:eissa (django-helusersiin?)
     - Management-komento, jolla haetaan public-key kantaan HTTPS:llä
     - ks. esim. http://connect2id.com/blog/how-to-validate-an-openid-connect-id-token
   - OIDC-clienttien client_id:t URLeiksi
** TODO Kirjautumisten loki
   - Implementoi kirjautumisten lokitus tietokantaan, esim. django-axes saattaisi toimia
   - UI viimeisten kirjautumisten näyttämiseen käyttäjän profiilissa
** TODO Login-methodien rajaaminen per palvelu OIDC:llä
** TODO Management-komento
** TODO Profile -scopen sijaan esim. pelkän nimen kysyminen (picture, zoneinfo, locale?)
** TODO Kirjautuminen ilman sähköpostia
** TODO Profiili-sivu
** TODO Account-nappi palveluihin
** TODO Useamman kirjautumistavan linkkaus samaan tiliin
** TODO Käyttäjätilien yhdistäminen
   - helsso:n osuus
     - Yhdistettäessä tili B tiliin A, deprekoidaan B ja yhdistetään B:n
       sähköpostiosoitteet ja SocialAccount:t A:n alle.  Jatkossa
       id_token/api_token:ssa välitetään tieto ~old_uuids: B~.
   - applikaatioiden osuus
     - Kun id_token/api_token:ssa on old_uuids, niin tarkistetaan onko
       sellaista käyttäjää ja jos on, niin siirretään kaikki vanhan
       UUID:n mukaisen käyttäjän tiedot uuden UUID:n alle.

       HUOM! Helppo tapaus: Jos uutta UUID:tä ei vielä ollut, niin
       voidaan vaan vaihtaa nykyisen käyttäjän UUID.

** TODO Salasanalla kirjautuminen
** TODO Sähköpostiosoitteiden hallinta
   - Sähköpostiosoitteen lisääminen/poistaminen
   - Sähköpostiosoitteen verifiointi
** TODO Salasanan vaihtaminen
