# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-18 17:28
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hkijwt.mixins
import multiselectfield.db.fields
import parler.models


class Migration(migrations.Migration):

    dependencies = [
        ('oidc_provider', '0020_client__post_logout_redirect_uris'),
        ('hkijwt', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience', models.CharField(max_length=200, verbose_name='audience')),
                ('identifier', models.CharField(help_text='Leave empty to autofill from audience.', max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[a-z0-9]+$', message='May contain only lower case letters and digits.')], verbose_name='identifier')),
                ('scopes', multiselectfield.db.fields.MultiSelectField(choices=[('email', 'E-mail'), ('profile', 'Profile'), ('address', 'Address'), ('github_username', 'GitHub username')], default=['email', 'profile'], help_text='Select scopes to include to the API token.', max_length=200, verbose_name='scopes')),
            ],
            options={
                'verbose_name': 'API',
                'verbose_name_plural': 'APIs',
            },
            bases=(hkijwt.mixins.AutoFilledIdentifier, hkijwt.mixins.ImmutableFields, models.Model),
        ),
        migrations.CreateModel(
            name='ApiPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifier', models.CharField(blank=True, help_text='If there is a need for multiple permissions per API, this can specify what kind of permission this is about, e.g. "read" or "write".  For general API access permisison just leave this empty.', max_length=30, verbose_name='specifier')),
                ('identifier', models.CharField(editable=False, help_text='The permission identifier as known by the API provider application.  Filled automatically from API identifier and permission specifier.', max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^api-[a-z0-9]+(-[a-z0-9]+)*$', message='Must start with "api-" and may contain only lower case letters, digits and dashes.')], verbose_name='identifier')),
                ('allowed_apps', models.ManyToManyField(help_text='Select client applications which are allowed to get access to this API permission.', related_name='granted_api_permissions', to='oidc_provider.Client', verbose_name='allowed applications')),
                ('api', models.ForeignKey(help_text='The API that this permission is for.', on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='hkijwt.Api', verbose_name='API')),
            ],
            options={
                'verbose_name': 'API permission',
                'verbose_name_plural': 'API permissions',
            },
            bases=(hkijwt.mixins.AutoFilledIdentifier, hkijwt.mixins.ImmutableFields, parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ApiPermissionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.CharField(max_length=1000, verbose_name='description')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='hkijwt.ApiPermission', verbose_name='API permission')),
            ],
            options={
                'verbose_name': 'API permission translation',
                'verbose_name_plural': 'API permission translations',
            },
        ),
        migrations.AlterUniqueTogether(
            name='apipermissiontranslation',
            unique_together=set([('language_code', 'master')]),
        ),
    ]
